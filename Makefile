SHELL := /bin/bash
DATA_DIR = data

# ---------- Fetch Ciqual and Calnut tables. ----------

CIQUAL_CSV := $(DATA_DIR)/ciqual2020.csv
CIQUAL_URL := https://raw.githubusercontent.com/openfoodfacts/openfoodfacts-server/main/external-data/ciqual/ciqual/CIQUAL2020_ENG_2020_07_07.csv
$(CIQUAL_CSV):
	wget -O $(CIQUAL_CSV) $(CIQUAL_URL)

CALNUT_0_CSV := $(DATA_DIR)/calnut.0.csv
CALNUT_0_URL := https://github.com/openfoodfacts/openfoodfacts-server/raw/refs/heads/main/external-data/ciqual/calnut/CALNUT.csv.0
$(CALNUT_0_CSV):
	wget -O $(CALNUT_0_CSV) $(CALNUT_0_URL)

CALNUT_1_CSV := $(DATA_DIR)/calnut.1.csv
CALNUT_1_URL := https://github.com/openfoodfacts/openfoodfacts-server/raw/refs/heads/main/external-data/ciqual/calnut/CALNUT.csv.1
$(CALNUT_1_CSV):
	wget -O $(CALNUT_1_CSV) $(CALNUT_1_URL)

# ---------- Fetch the nutrient map from recipe estimator map. ----------

NUTRIENT_MAP_RE := $(DATA_DIR)/nutrient_map_recipe_estimator.csv
NUTRIENT_MAP_RE_URL := https://raw.githubusercontent.com/openfoodfacts/recipe-estimator/main/ciqual/nutrient_map.csv
$(NUTRIENT_MAP_RE):
	wget -O $(NUTRIENT_MAP_RE) $(NUTRIENT_MAP_RE_URL)

nutrient-map-reformat: $(NUTRIENT_MAP_RE)
	DATA_DIR=$(DATA_DIR) python scripts/nutrient_map/nutrient_map_reformat.py

nutrient-map-update-counts:
	DATA_DIR=$(DATA_DIR) python scripts/nutrient_map/nutrient_map_update_counts.py

# ---------- Fetch the prices parquet file and the products jsonl file. ----------

PRICES_PARQUET := $(DATA_DIR)/prices.parquet
PRICES_PARQUET_URL := https://huggingface.co/datasets/openfoodfacts/open-prices/resolve/main/prices.parquet
$(PRICES_PARQUET):
	wget -O $(PRICES_PARQUET) $(PRICES_PARQUET_URL)

PRODUCT_JSONL_GZ := $(DATA_DIR)/openfoodfacts-products.jsonl.gz
PRODUCT_JSONL_GZ_URL := https://static.openfoodfacts.org/data/openfoodfacts-products.jsonl.gz
$(PRODUCT_JSONL_GZ):
	wget -O $(PRODUCT_JSONL_GZ) $(PRODUCT_JSONL_GZ_URL)

# ---------- Fetch all. ----------

fetch-all: $(CIQUAL_CSV) $(CALNUT_0_CSV) $(CALNUT_1_CSV) $(NUTRIENT_MAP_RE) $(PRICES_PARQUET) $(PRODUCT_JSONL_GZ)

# ---------- Fetch, extract and summarize the Recommendations from the Nordic Nutrition Recommendations 2023. ----------
# recommendations_nnr2023.csv is tracked in git but can be regenerated by deleting the file and running
# make data/recommendations_nnr2023.csv

NNR_HTML := $(DATA_DIR)/recommendations_nnr2023.html
NNR_EXTRACTED_TABLES := $(DATA_DIR)/recommendations_nnr2023/*.csv
NNR_SUMMARY_CSV := $(DATA_DIR)/recommendations_nnr2023.csv
# Original URL: https://pub.norden.org/nord2023-003/recommendations.html
# Snapshot 29 July 2024:
NNR_HTML_URL := https://web.archive.org/web/20240729193940/https://pub.norden.org/nord2023-003/recommendations.html

$(NNR_HTML):
	wget -O $(NNR_HTML) $(NNR_HTML_URL)

$(NNR_EXTRACTED_TABLES): $(NNR_HTML)
	DATA_DIR=$(DATA_DIR) python scripts/recommendations_nnr2023/recommendations_extract_tables.py

$(NNR_SUMMARY_CSV): $(NNR_EXTRACTED_TABLES)
	DATA_DIR=$(DATA_DIR) python scripts/recommendations_nnr2023/recommendations_summarize_general.py

# ---------- Load the data into the database. ----------

load: $(CALNUT_0_CSV) $(CALNUT_1_CSV) $(PRICES_PARQUET) $(PRODUCT_JSONL_GZ)
	duckdb data/data.db < ./dietdashboard/queries/load.sql

process:
	duckdb data/data.db < ./dietdashboard/queries/process.sql

# ---------- Run the optmization dashboard. ----------

opt:
	DATA_DIR=$(DATA_DIR) python dietdashboard/app.py

# ---------- Create the nutrient extraction template. ----------

template:
	DATA_DIR=$(DATA_DIR) python scripts/template_nutriments_query.py

# ---------- Run food comparison. ----------

# Create a symbolic link to the calnut.1.csv file for it to be served by the python http server.
food-comparison: $(CALNUT_1_CSV)
	ln -sf ../data/calnut.1.csv ./foodcomparison/calnut.csv
	(cd foodcomparison && python -m http.server)
